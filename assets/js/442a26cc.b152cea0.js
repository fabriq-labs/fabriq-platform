"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[192],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=i.createContext({}),p=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),h=n,f=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return a?i.createElement(f,s(s({ref:t},c),{},{components:a})):i.createElement(f,s({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,s[1]=o;for(var p=2;p<r;p++)s[p]=a[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},9241:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=a(7462),n=(a(7294),a(3905));const r={sidebar_position:3,sidebar_label:"Initializing a Database"},s="Initializing a Database",o={unversionedId:"quickstart/init_database",id:"quickstart/init_database",title:"Initializing a Database",description:"This comprehensive guide is designed to provide guidance on how to effectively initialize a database. It covers essential aspects such as selecting the appropriate database management system, defining the schema, and setting up initial data. With step-by-step instructions and best practices, this document aims to help users ensure a smooth and efficient database initialization process.",source:"@site/docs/quickstart/init_database.md",sourceDirName:"quickstart",slug:"/quickstart/init_database",permalink:"/docs/quickstart/init_database",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/init_database.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Initializing a Database"},sidebar:"tutorialSidebar",previous:{title:"Create a Firebase Project",permalink:"/docs/quickstart/setup_firebase_project"},next:{title:"Organizations and user setup",permalink:"/docs/quickstart/org_setup"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Database Initialization",id:"database-initialization",level:2},{value:"1. Update .env File",id:"1-update-env-file",level:3},{value:"2. Firebase Admin Key",id:"2-firebase-admin-key",level:3},{value:"3. Initialization",id:"3-initialization",level:3},{value:"Verification",id:"verification",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"initializing-a-database"},"Initializing a Database"),(0,n.kt)("p",null,"This comprehensive guide is designed to provide guidance on how to effectively initialize a database. It covers essential aspects such as selecting the appropriate database management system, defining the schema, and setting up initial data. With step-by-step instructions and best practices, this document aims to help users ensure a smooth and efficient database initialization process."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"Before initializing the database, ensure you have installed the necessary tools: ",(0,n.kt)("a",{parentName:"p",href:"https://www.postgresql.org/download/"},"psql")," and ",(0,n.kt)("a",{parentName:"p",href:"https://flywaydb.org/"},"flyway"),"."),(0,n.kt)("h2",{id:"database-initialization"},"Database Initialization"),(0,n.kt)("p",null,"To begin, you'll need to clone the project from the Github repository. If you don't have it already, you can do so by executing the following commands in your terminal:"),(0,n.kt)("p",null,"Before running this script, it will create the organization, group, and user in the database and Firebase. Make sure the folder contains the necessary files. To create the user and organization, follow these steps."),(0,n.kt)("h3",{id:"1-update-env-file"},"1. Update .env File"),(0,n.kt)("p",null,"Before running the initialization process, ensure you have the necessary configuration in place. Refer to the ",(0,n.kt)("inlineCode",{parentName:"p"},"sample.env")," file for the required environment variables. Copy the ",(0,n.kt)("inlineCode",{parentName:"p"},"sample.env")," file and rename it as ",(0,n.kt)("inlineCode",{parentName:"p"},".env"),", then replace the placeholders with appropriate values for your setup."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"FABRIQ_DB_NAME=database name\nFABRIQ_DB_HOST=host\nFABRIQ_DB_PORT=port\nFABRIQ_DB_USER=username\nFABRIQ_DB_PASSWORD=password\nDATABASE_URL=postgres://username:password@host/database name\nREDASH_HOST=host url\nREDASH_LOG_LEVEL=INFO\nREDASH_REDIS_URL=redis://redis:6379/0\nREDASH_RATELIMIT_ENABLED=false\nWORKERS_COUNT=2\nGRAPHQL_URL=http://graphql-engine:8080/v1/graphql\nFABRIQ_HOST=host url\nHASURA_GRAPHQL_ADMIN_SECRET=hasura admin key here\nGPT_URL=http://openapi:5002\nOPENAI_API_KEY=OPENAI_API_KEY\nFABRIQ_ORG=org name\nFABRIQ_ORG_SLUG=org_slug\nFABRIQ_EMAIL=email\nFABRIQ_USER_NAME=user_name\n")),(0,n.kt)("h3",{id:"2-firebase-admin-key"},"2. Firebase Admin Key"),(0,n.kt)("p",null,"Make sure your ",(0,n.kt)("inlineCode",{parentName:"p"},"resource/scripts")," folder contains the ",(0,n.kt)("inlineCode",{parentName:"p"},"firebase-admin-key.json")," file. This file is essential for authentication and authorization processes during the initialization. If you don't have this file, obtain it from your Firebase project and place it in the appropriate directory."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"firebase-admin-key.json"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n  "type": "service_account",\n  "project_id": "project_id",\n  "private_key_id": "private_key_id",\n  "private_key": "-----BEGIN PRIVATE KEY-----\\nyour private key\\n-----END PRIVATE KEY-----\\n",\n  "client_email": "client_email",\n  "client_id": "client_id",\n  "auth_uri": "https://accounts.google.com/o/oauth2/auth",\n  "token_uri": "https://oauth2.googleapis.com/token",\n  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",\n  "client_x509_cert_url": "client_x509_cert_url"\n}\n\n')),(0,n.kt)("h3",{id:"3-initialization"},"3. Initialization"),(0,n.kt)("p",null,"Once you have updated the ",(0,n.kt)("inlineCode",{parentName:"p"},".env")," file and have the ",(0,n.kt)("inlineCode",{parentName:"p"},"firebase-admin-key.json")," file in place, you are ready to proceed with the initialization process."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/fabriq-labs/fabriq-platform.git\ncd fabriq-platform\n./init.sh\n")),(0,n.kt)("p",null,"During the initialization, the script will run various tasks, including setting up the schema and importing initial data into the database and organizationa & user creation."),(0,n.kt)("h2",{id:"verification"},"Verification"),(0,n.kt)("p",null,"To verify that the database scripts have been successfully imported, look for the following logs:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"flyway_running",src:a(7051).Z,width:"1742",height:"870"})),(0,n.kt)("p",null,"If you see these logs, it serves as confirmation that your database has been successfully initialized."),(0,n.kt)("p",null,"Congratulations! You have now successfully initialized your database, and it is ready for use with the project."),(0,n.kt)("p",null,"For more details on the database structure and how to interact with it, please refer to the project's documentation and codebase on ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/fabriq-labs/fabriq-platform"},"GitHub"),"."))}d.isMDXComponent=!0},7051:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/flyway-91b104d16a51ac8ad8cf2fc7117f2268.png"}}]);